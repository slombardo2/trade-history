apiVersion: v1
kind: Service
metadata:
  name: "tradehistory-service"
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  #type: LoadBalancer
  #type: NodePort
  ports:
  # the port that this service should serve on
  - name: http
    port: 9080
  - name: https
    port: 9443

  selector:
    app: "tradehistory-selector"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "tradehistory-deployment"
  labels:
    app: stock-trader
  annotations:
    prism.subkind: Liberty
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: "tradehistory-selector"
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "9080"
    spec:
      containers:
      - name: tradehistory
        image: slombardo2/trade-history:latest
        env:
          - name: JWT_AUDIENCE
            valueFrom:
              secretKeyRef:
                name: jwt 
                key: audience
          - name: JWT_ISSUER
            valueFrom:
              secretKeyRef:
                name: jwt
                key: issuer
          - name: MONGO_USER
            valueFrom:
              secretKeyRef:
                name: mongodbenv
                key: mongo_user
                optional: false
          - name: MONGO_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodbenv
                key: mongo_password
                optional: false
          - name: MONGO_AUTH_DB
            valueFrom:
              secretKeyRef:
                name: mongodbenv
                key: mongo_auth_db
                optional: false
          - name: MONGO_DATABASE
            valueFrom:
              secretKeyRef:
                name: mongodbenv
                key: mongo_database
                optional: false
          - name: MONGO_IP
            valueFrom:
              secretKeyRef:
                name: mongodbenv
                key: mongo_ip
                optional: false
          - name: MONGO_PORT
            valueFrom:
              secretKeyRef:
                name: mongodbenv
                key: mongo_port
                optional: false
          - name: BOOTSTRAP_SERVER
            valueFrom:
              secretKeyRef:
                name: kafka-consumer
                key: url
                optional: false
          - name: CONSUMER_API_KEY
            valueFrom:
              secretKeyRef:
                name: kafka-consumer
                key: apikey
                optional: false
          - name: CONSUMER_GROUP_ID
            valueFrom:
              secretKeyRef:
                name: kafka-extra
                key: consumer_group_id
                optional: true  # if not set, defaults to application name
          - name: TOPIC
            valueFrom:
              secretKeyRef:
                name: kafka-extra
                key: topic 
                optional: false
          - name: WLP_LOGGING_CONSOLE_FORMAT
            value: json
          - name: WLP_LOGGING_CONSOLE_SOURCE
            value: message,ffdc
        ports:
          - containerPort: 9080
          - containerPort: 9443
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9080
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9080
          initialDelaySeconds: 90
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 5 # Allow a little time to exec into the pod to grab FFDCs before it's killed
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 128Mi
---
#Deploy the autoscaler
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tradehistory-hpa
  labels:
    app: stock-trader
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tradehistory
  maxReplicas: 10
  minReplicas: 2
  targetCPUUtilizationPercentage: 60
  
